/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.Reader;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.Scanner;

public class App {
    static ArrayList<Quote> quotes = new ArrayList<Quote>();

    public static void main(String[] args) {
        System.out.println(getQuote("./app/src/main/resources/recentquotes.json"));
        // enter the word
        System.out.println( getByWord("../app/src/main/resources/recentquotes.json"));
        // enter the author name
        System.out.println(getByAuthorName("../app/src/main/resources/recentquotes.json"));
      }

    private static final Type REVIEW_TYPE = new TypeToken<ArrayList<Quote>>() {
    }.getType();

    public static void getAllQuote(String path){
        try{
            if(quotes.size() == 0 ){
                Reader reader = new FileReader(path);
                Gson gson = new Gson();
                quotes = gson.fromJson(reader,REVIEW_TYPE);
            }
        }catch (Exception ex){
            System.out.println(ex);
        };
    };

    public static Quote getQuote(String path){
        getAllQuote(path);
        Quote quote = quotes.get((int)(Math.random() * quotes.size()));
        return quote ;
    };

    // Stretch Goals get By Author Name with command line
    public static ArrayList<Quote> getByAuthorName(String path){
        Scanner input = new Scanner(System.in);
        System.out.println("Enter the name of the author: ");
        String author = input.nextLine();
        System.out.println(author);
        getAllQuote(path);
        ArrayList<Quote> authorQuotes = new ArrayList<Quote>();
        for (Quote quote: quotes){
            if(quote.getAuthor().equals(author)){
                authorQuotes.add(quote);
            }
        }
        return authorQuotes;
    };

    // Stretch Goals get By Author Name without command line
    public static ArrayList<Quote> getByAuthorName(String path, String author){
        getAllQuote(path);
        ArrayList<Quote> authorQuotes = new ArrayList<Quote>();
        for (Quote quote: quotes){
            if(quote.getAuthor().equals(author)){
                authorQuotes.add(quote);
            }
        }
        return authorQuotes;
    };

    // Stretch Goals get By Word with command line
    public static ArrayList<Quote> getByWord(String path){
        Scanner input = new Scanner(System.in);
        System.out.println("Enter the word: ");
        String word = input.nextLine();
        getAllQuote(path);
        ArrayList<Quote> authorQuotes = new ArrayList<Quote>();
        for (Quote quote: quotes){
            if(quote.getText().contains(word)){
                authorQuotes.add(quote);
            }
        }
        return authorQuotes;
    };

    // Stretch Goals get By Word without command line
    public static ArrayList<Quote> getByWord(String path , String word){
        getAllQuote(path);
        ArrayList<Quote> authorQuotes = new ArrayList<Quote>();
        for (Quote quote: quotes){
            if(quote.getText().contains(word)){
                authorQuotes.add(quote);
            }
        }
        return authorQuotes;
    };
}
